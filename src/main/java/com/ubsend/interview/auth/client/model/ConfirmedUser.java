/*
 * Monty Authentication API
 * Authentication service for the Monty API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@sendasyou.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ubsend.interview.auth.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * Represents a user who is allowed to login. This object does not have a status property.
 */
@ApiModel(description = "Represents a user who is allowed to login. This object does not have a status property.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-06T14:03:51.433+01:00")
public class ConfirmedUser {
  @JsonProperty("email")
  private String email = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("newsletterOptIn")
  private Boolean newsletterOptIn = null;

  @JsonProperty("createdAt")
  private DateTime createdAt = null;

  @JsonProperty("username")
  private String username = null;

  @JsonProperty("claims")
  private List<Claim> claims = null;

  public ConfirmedUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The e-mail of the user
   * @return email
  **/
  @ApiModelProperty(required = true, value = "The e-mail of the user")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public ConfirmedUser firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the user
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "The first name of the user")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public ConfirmedUser lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the user
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "The last name of the user")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public ConfirmedUser newsletterOptIn(Boolean newsletterOptIn) {
    this.newsletterOptIn = newsletterOptIn;
    return this;
  }

   /**
   * Indicates if the user is subscribed to the newsletter
   * @return newsletterOptIn
  **/
  @ApiModelProperty(value = "Indicates if the user is subscribed to the newsletter")
  public Boolean getNewsletterOptIn() {
    return newsletterOptIn;
  }

  public void setNewsletterOptIn(Boolean newsletterOptIn) {
    this.newsletterOptIn = newsletterOptIn;
  }

  public ConfirmedUser createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time when the user was created
   * @return createdAt
  **/
  @ApiModelProperty(value = "The date and time when the user was created")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ConfirmedUser username(String username) {
    this.username = username;
    return this;
  }

   /**
   * The username of the user
   * @return username
  **/
  @ApiModelProperty(value = "The username of the user")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public ConfirmedUser claims(List<Claim> claims) {
    this.claims = claims;
    return this;
  }

  public ConfirmedUser addClaimsItem(Claim claimsItem) {
    if (this.claims == null) {
      this.claims = new ArrayList<Claim>();
    }
    this.claims.add(claimsItem);
    return this;
  }

   /**
   * The clients that the user is a member of
   * @return claims
  **/
  @ApiModelProperty(value = "The clients that the user is a member of")
  public List<Claim> getClaims() {
    return claims;
  }

  public void setClaims(List<Claim> claims) {
    this.claims = claims;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfirmedUser confirmedUser = (ConfirmedUser) o;
    return Objects.equals(this.email, confirmedUser.email) &&
        Objects.equals(this.firstName, confirmedUser.firstName) &&
        Objects.equals(this.lastName, confirmedUser.lastName) &&
        Objects.equals(this.newsletterOptIn, confirmedUser.newsletterOptIn) &&
        Objects.equals(this.createdAt, confirmedUser.createdAt) &&
        Objects.equals(this.username, confirmedUser.username) &&
        Objects.equals(this.claims, confirmedUser.claims);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, firstName, lastName, newsletterOptIn, createdAt, username, claims);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfirmedUser {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    newsletterOptIn: ").append(toIndentedString(newsletterOptIn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    claims: ").append(toIndentedString(claims)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

