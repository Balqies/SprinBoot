/*
 * Monty Authentication API
 * Authentication service for the Monty API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@sendasyou.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ubsend.interview.auth.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Represents a client associated with a claim. Please note that this object does not hold the full details of a client. If you are interested in the full details, see the /clients endpoint and the ClientDetails model. 
 */
@ApiModel(description = "Represents a client associated with a claim. Please note that this object does not hold the full details of a client. If you are interested in the full details, see the /clients endpoint and the ClientDetails model. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-06T14:03:51.433+01:00")
public class Client {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("level")
  private ClientLevel level = null;

  @JsonProperty("clientType")
  private ClientType clientType = null;

  public Client id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the client.
   * @return id
  **/
  @ApiModelProperty(value = "The ID of the client.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Client name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the client.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the client.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Client level(ClientLevel level) {
    this.level = level;
    return this;
  }

   /**
   * Indicates the level of the client within the client hierarchy.
   * @return level
  **/
  @ApiModelProperty(value = "Indicates the level of the client within the client hierarchy.")
  public ClientLevel getLevel() {
    return level;
  }

  public void setLevel(ClientLevel level) {
    this.level = level;
  }

  public Client clientType(ClientType clientType) {
    this.clientType = clientType;
    return this;
  }

   /**
   * Indicates the type of the client within the client hierarchy.
   * @return clientType
  **/
  @ApiModelProperty(value = "Indicates the type of the client within the client hierarchy.")
  public ClientType getClientType() {
    return clientType;
  }

  public void setClientType(ClientType clientType) {
    this.clientType = clientType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Client client = (Client) o;
    return Objects.equals(this.id, client.id) &&
        Objects.equals(this.name, client.name) &&
        Objects.equals(this.level, client.level) &&
        Objects.equals(this.clientType, client.clientType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, level, clientType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Client {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    clientType: ").append(toIndentedString(clientType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

