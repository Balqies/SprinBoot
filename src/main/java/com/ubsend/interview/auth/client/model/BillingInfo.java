/*
 * Monty Authentication API
 * Authentication service for the Monty API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@sendasyou.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ubsend.interview.auth.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Holds billing information of a client.
 */
@ApiModel(description = "Holds billing information of a client.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-06T14:03:51.433+01:00")
public class BillingInfo {
  @JsonProperty("schedule")
  private BillingSchedule schedule = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("vat")
  private String vat = null;

  @JsonProperty("eori")
  private String eori = null;

  @JsonProperty("additionalBillingEmail")
  private String additionalBillingEmail = null;

  public BillingInfo schedule(BillingSchedule schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * How frequently should billing be done. Values are WEEKLY and MONTHLY.
   * @return schedule
  **/
  @ApiModelProperty(value = "How frequently should billing be done. Values are WEEKLY and MONTHLY.")
  public BillingSchedule getSchedule() {
    return schedule;
  }

  public void setSchedule(BillingSchedule schedule) {
    this.schedule = schedule;
  }

  public BillingInfo currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency code for billing (e.g. EUR, USD, etc).
   * @return currency
  **/
  @ApiModelProperty(value = "Currency code for billing (e.g. EUR, USD, etc).")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public BillingInfo vat(String vat) {
    this.vat = vat;
    return this;
  }

   /**
   * The VAT number for billing.
   * @return vat
  **/
  @ApiModelProperty(value = "The VAT number for billing.")
  public String getVat() {
    return vat;
  }

  public void setVat(String vat) {
    this.vat = vat;
  }

  public BillingInfo eori(String eori) {
    this.eori = eori;
    return this;
  }

   /**
   * Economic Operators Registration and Identification number. The EORI number is a unique identification number that companies are required to use when exchanging data with Customs in all EU Member States. 
   * @return eori
  **/
  @ApiModelProperty(value = "Economic Operators Registration and Identification number. The EORI number is a unique identification number that companies are required to use when exchanging data with Customs in all EU Member States. ")
  public String getEori() {
    return eori;
  }

  public void setEori(String eori) {
    this.eori = eori;
  }

  public BillingInfo additionalBillingEmail(String additionalBillingEmail) {
    this.additionalBillingEmail = additionalBillingEmail;
    return this;
  }

   /**
   * An optional additional e-mail address to receive billing updates.
   * @return additionalBillingEmail
  **/
  @ApiModelProperty(value = "An optional additional e-mail address to receive billing updates.")
  public String getAdditionalBillingEmail() {
    return additionalBillingEmail;
  }

  public void setAdditionalBillingEmail(String additionalBillingEmail) {
    this.additionalBillingEmail = additionalBillingEmail;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingInfo billingInfo = (BillingInfo) o;
    return Objects.equals(this.schedule, billingInfo.schedule) &&
        Objects.equals(this.currency, billingInfo.currency) &&
        Objects.equals(this.vat, billingInfo.vat) &&
        Objects.equals(this.eori, billingInfo.eori) &&
        Objects.equals(this.additionalBillingEmail, billingInfo.additionalBillingEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schedule, currency, vat, eori, additionalBillingEmail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingInfo {\n");
    
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("    eori: ").append(toIndentedString(eori)).append("\n");
    sb.append("    additionalBillingEmail: ").append(toIndentedString(additionalBillingEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

