/*
 * Monty Authentication API
 * Authentication service for the Monty API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@sendasyou.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ubsend.interview.auth.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * A request to create a new user. Used by an administrator to create new users.
 */
@ApiModel(description = "A request to create a new user. Used by an administrator to create new users.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-06T14:03:51.433+01:00")
public class CreateUserRequest {
  @JsonProperty("email")
  private String email = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("newsletterOptIn")
  private Boolean newsletterOptIn = null;

  @JsonProperty("createdAt")
  private DateTime createdAt = null;

  @JsonProperty("username")
  private String username = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("suppressEmail")
  private Boolean suppressEmail = null;

  public CreateUserRequest email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The e-mail of the user
   * @return email
  **/
  @ApiModelProperty(required = true, value = "The e-mail of the user")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CreateUserRequest firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * The first name of the user
   * @return firstName
  **/
  @ApiModelProperty(required = true, value = "The first name of the user")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public CreateUserRequest lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * The last name of the user
   * @return lastName
  **/
  @ApiModelProperty(required = true, value = "The last name of the user")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public CreateUserRequest newsletterOptIn(Boolean newsletterOptIn) {
    this.newsletterOptIn = newsletterOptIn;
    return this;
  }

   /**
   * Indicates if the user is subscribed to the newsletter
   * @return newsletterOptIn
  **/
  @ApiModelProperty(value = "Indicates if the user is subscribed to the newsletter")
  public Boolean getNewsletterOptIn() {
    return newsletterOptIn;
  }

  public void setNewsletterOptIn(Boolean newsletterOptIn) {
    this.newsletterOptIn = newsletterOptIn;
  }

  public CreateUserRequest createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time when the user was created
   * @return createdAt
  **/
  @ApiModelProperty(value = "The date and time when the user was created")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CreateUserRequest username(String username) {
    this.username = username;
    return this;
  }

   /**
   * The username of the user.
   * @return username
  **/
  @ApiModelProperty(required = true, value = "The username of the user.")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public CreateUserRequest password(String password) {
    this.password = password;
    return this;
  }

   /**
   * The temporary password. If not provided, a random password will be assigned.
   * @return password
  **/
  @ApiModelProperty(value = "The temporary password. If not provided, a random password will be assigned.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public CreateUserRequest suppressEmail(Boolean suppressEmail) {
    this.suppressEmail = suppressEmail;
    return this;
  }

   /**
   * Overrides the default behavior which is to send an invitation e-mail to the new user. 
   * @return suppressEmail
  **/
  @ApiModelProperty(value = "Overrides the default behavior which is to send an invitation e-mail to the new user. ")
  public Boolean getSuppressEmail() {
    return suppressEmail;
  }

  public void setSuppressEmail(Boolean suppressEmail) {
    this.suppressEmail = suppressEmail;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateUserRequest createUserRequest = (CreateUserRequest) o;
    return Objects.equals(this.email, createUserRequest.email) &&
        Objects.equals(this.firstName, createUserRequest.firstName) &&
        Objects.equals(this.lastName, createUserRequest.lastName) &&
        Objects.equals(this.newsletterOptIn, createUserRequest.newsletterOptIn) &&
        Objects.equals(this.createdAt, createUserRequest.createdAt) &&
        Objects.equals(this.username, createUserRequest.username) &&
        Objects.equals(this.password, createUserRequest.password) &&
        Objects.equals(this.suppressEmail, createUserRequest.suppressEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, firstName, lastName, newsletterOptIn, createdAt, username, password, suppressEmail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateUserRequest {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    newsletterOptIn: ").append(toIndentedString(newsletterOptIn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    suppressEmail: ").append(toIndentedString(suppressEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

